{"duplication" : [{ "lines":["caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:","returnreadNumeric();","caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["Iteratorvalues=locks.values().iterator();","while(values.hasNext()){","TableStorePagelock=(TableStorePage)values.next();","if(lock.con!=con)returnnull;","tabLockConnection=con;","tabLockCount++;"], "location": ["|project://smallsql/src/smallsql/database/Table.java|","|project://smallsql/src/smallsql/database/Table.java|"]},
{ "lines":["publicdoubledoubleValue(){","returnvalue;","publicfloatfloatValue(){","returnvalue;","publicintintValue(){","return(int)value;"], "location": ["|project://smallsql/src/smallsql/database/MutableLong.java|","|project://smallsql/src/smallsql/database/MutableFloat.java|"]},
{ "lines":["caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:","returngetNumeric();","caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returngetIntImpl();","caseSQLTokenizer.BIGINT:","returngetLongImpl();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["returnparam1.isNull();","finalbyte[]getBytes()throwsException{","if(isNull())returnnull;","returngetString().getBytes();","finalStringgetString()throwsException{","if(isNull())returnnull;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionLCase.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionUCase.java|"]},
{ "lines":["caseSQLTokenizer.BIGINT:","caseSQLTokenizer.DATE:","caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:","caseSQLTokenizer.MONEY:"], "location": ["|project://smallsql/src/smallsql/database/Index.java|","|project://smallsql/src/smallsql/database/Index.java|"]},
{ "lines":["finalbooleangetBoolean()throwsException{","if(isNull())returnfalse;","returnUtils.string2boolean(getString().trim());","finalintgetInt()throwsException{","if(isNull())return0;","returnInteger.parseInt(getString().trim());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["if(isNull())return0;","returnFloat.parseFloat(getString().trim());","finaldoublegetDouble()throwsException{","if(isNull())return0;","returnDouble.parseDouble(getString().trim());","finallonggetMoney()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["if(status.nodeValueinstanceofIndexNode){","level++;","nodeStack.push(","newIndexNodeScrollStatus((IndexNode)status.nodeValue,","(expressions.get(level).getAlias()!=SQLTokenizer.DESC_STR),","scroll,level));"], "location": ["|project://smallsql/src/smallsql/database/IndexScrollStatus.java|","|project://smallsql/src/smallsql/database/IndexScrollStatus.java|"]},
{ "lines":["caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","return(obj==Boolean.TRUE)?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["returnparam1.isNull()||param2.isNull();","finalbyte[]getBytes()throwsException{","if(isNull())returnnull;","byte[]bytes=param1.getBytes();","intlength=param2.getInt();","if(bytes.length<=length)returnbytes;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRight.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionLeft.java|"]},
{ "lines":["caseSQLTokenizer.BINARY:","caseSQLTokenizer.VARBINARY:","returngetBytes();","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.VARBINARY:","returngetBytes();","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returnnewInteger(getInt());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["}catch(Throwablee){","if(raFile!=null)","try{","raFile.close();","}catch(Exceptione2){","DriverManager.println(e2.toString());"], "location": ["|project://smallsql/src/smallsql/database/IndexDescription.java|","|project://smallsql/src/smallsql/database/TableView.java|"]},
{ "lines":["returngetBytes();","caseSQLTokenizer.DATE:","caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:","returnnewDateTime(getLong(),dataType);"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["result=right.first();","if(!result){","switch(type){","caseJoin.LEFT_JOIN:","caseJoin.FULL_JOIN:","isOuterValid=false;"], "location": ["|project://smallsql/src/smallsql/database/JoinScroll.java|","|project://smallsql/src/smallsql/database/JoinScroll.java|"]},
{ "lines":["caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","caseSQLTokenizer.TIMESTAMP:","offset+=8;"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["return(int)value;","publiclonglongValue(){","return(long)value;","publicStringtoString(){","returnString.valueOf(value);","publicObjectgetImmutableObject(){"], "location": ["|project://smallsql/src/smallsql/database/MutableDouble.java|","|project://smallsql/src/smallsql/database/MutableFloat.java|"]},
{ "lines":["returnFloat.parseFloat(getString().trim());","finaldoublegetDouble()throwsException{","if(isNull())return0;","returnDouble.parseDouble(getString().trim());","finallonggetMoney()throwsException{","if(isNull())return0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["formatNumber(details.year,4,buf);","buf.append('-');","formatNumber(details.month+1,2,buf);","buf.append('-');","formatNumber(details.day,2,buf);","buf.append('');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["returnreadUnsignedByte();","caseSQLTokenizer.SMALLINT:","returnreadShort();","caseSQLTokenizer.INT:","returnreadInt();","caseSQLTokenizer.BIGINT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["try{","Expressionexpr=getValue(i);","wasNull=expr.isNull();","returnexpr.getLong();","}catch(Exceptione){","throwSmallSQLException.createFromException(e);"], "location": ["|project://smallsql/src/smallsql/database/SSCallableStatement.java|","|project://smallsql/src/smallsql/database/SSCallableStatement.java|"]},
{ "lines":["}else{","prev.nextLock=lock.nextLock;","return;","prev=lock;","lock=lock.nextLock;","break;"], "location": ["|project://smallsql/src/smallsql/database/Table.java|","|project://smallsql/src/smallsql/database/Table.java|"]},
{ "lines":["caseSQLTokenizer.JAVA_OBJECT:","caseSQLTokenizer.LONGVARBINARY:","caseSQLTokenizer.BLOB:","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["rowSource.setRowPosition(rowPosition);","finalvoidnullRow(){","rowSource.nullRow();","row=0;","finalvoidnoRow(){","rowSource.noRow();"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append(':');","formatMillis(details.millis,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["returnparam1.isNull()||param2.isNull();","finaldoublegetDouble()throwsException{","if(isNull())return0;","finalintplaces=param2.getInt();","doublevalue=param1.getDouble();","longfactor=1;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["if(result){","result=right.first();","if(!result){","switch(type){","caseJoin.LEFT_JOIN:","caseJoin.FULL_JOIN:"], "location": ["|project://smallsql/src/smallsql/database/JoinScroll.java|","|project://smallsql/src/smallsql/database/JoinScroll.java|"]},
{ "lines":["returnreadTimestamp();","caseSQLTokenizer.TIME:","returnreadTime();","caseSQLTokenizer.DATE:","returnreadDate();","caseSQLTokenizer.SMALLDATETIME:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["buf.append('-');","formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.hour,2,buf);","buf.append(':');","formatNumber(details.minute,2,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","returnreadLongString();","caseSQLTokenizer.JAVA_OBJECT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.BOOLEAN:","returngetBoolean()?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returngetIntImpl();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseEQUALS_NULL:","caseEQUALS:returncomp==0;","caseGREATER:returncomp>0;","caseGRE_EQU:returncomp>=0;","caseLESSER:returncomp<0;","caseLES_EQU:returncomp<=0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["break;","caseSQLTokenizer.BIGINT:","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.JAVA_OBJECT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["finalbooleanrowInserted(){","returnrowSource.rowInserted();","finalbooleanrowDeleted(){","returnrowSource.rowDeleted();","voidnullRow(){","rowSource.nullRow();"], "location": ["|project://smallsql/src/smallsql/database/Scrollable.java|","|project://smallsql/src/smallsql/database/SortedResult.java|"]},
{ "lines":["finalvoidnullRow(){","rowSource.nullRow();","row=0;","finalvoidnoRow(){","rowSource.noRow();","row=0;"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["if(serializeConnections.size()>0){","Iteratorvalues=locks.values().iterator();","while(values.hasNext()){","TableStorePagelock=(TableStorePage)values.next();","if(lock.con!=con)returnnull;","tabLockConnection=con;"], "location": ["|project://smallsql/src/smallsql/database/Table.java|","|project://smallsql/src/smallsql/database/Table.java|"]},
{ "lines":["for(intt=0;t<tables.size();t++){","StringtableName=tables.get(t);","TableViewtab=getTableView(con,tableName);","if(!(tabinstanceofTable))continue;","IndexDescriptionsindexes=((Table)tab).indexes;","for(inti=0;i<indexes.size();i++){"], "location": ["|project://smallsql/src/smallsql/database/Database.java|","|project://smallsql/src/smallsql/database/Database.java|","|project://smallsql/src/smallsql/database/Database.java|"]},
{ "lines":["caseSQLTokenizer.LONGVARBINARY:","caseSQLTokenizer.BLOB:","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["if(isNull())return0;","returnLong.parseLong(getString().trim());","finalfloatgetFloat()throwsException{","if(isNull())return0;","returnFloat.parseFloat(getString().trim());","finaldoublegetDouble()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["if(isNull())return0;","intdataType=getDataType();","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?1:0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseGREATER:returncomp>0;","caseGRE_EQU:returncomp>=0;","caseLESSER:returncomp<0;","caseLES_EQU:returncomp<=0;","caseUNEQUALS:returncomp!=0;","caseBETWEEN:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.TIME:","caseSQLTokenizer.DATE:","caseSQLTokenizer.SMALLDATETIME:","offset+=4;","break;","caseSQLTokenizer.BIGINT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["this.offset=valueOffset;","if(readBoolean())return0;","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returnreadBoolean()?1:0;"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returnnewDouble(getDouble());","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:","returnMoney.createFromUnscaledValue(getMoney());","caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["returngetIntImpl();","caseSQLTokenizer.BIGINT:","returngetLongImpl();","caseSQLTokenizer.REAL:","returngetFloatImpl();","caseSQLTokenizer.FLOAT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["break;","caseSQLTokenizer.VARBINARY:","caseSQLTokenizer.BINARY:","caseSQLTokenizer.LONGVARBINARY:","caseSQLTokenizer.BLOB:","caseSQLTokenizer.UNIQUEIDENTIFIER:"], "location": ["|project://smallsql/src/smallsql/database/Index.java|","|project://smallsql/src/smallsql/database/Index.java|"]},
{ "lines":["caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returngetIntImpl();","caseSQLTokenizer.BIGINT:","returngetLongImpl();","caseSQLTokenizer.REAL:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["break;","caseSQLTokenizer.BIGINT:","caseSQLTokenizer.DATE:","caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:"], "location": ["|project://smallsql/src/smallsql/database/Index.java|","|project://smallsql/src/smallsql/database/Index.java|"]},
{ "lines":["returnreadShort();","caseSQLTokenizer.INT:","returnreadInt();","caseSQLTokenizer.BIGINT:","returnreadLong();","caseSQLTokenizer.REAL:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returnreadInt();","caseSQLTokenizer.BIGINT:","returnreadLong();","caseSQLTokenizer.REAL:","returnreadFloat();","caseSQLTokenizer.FLOAT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["switch(operation){","caseIN:","caseEQUALS_NULL:","caseEQUALS:returncomp==0;","caseGREATER:returncomp>0;","caseGRE_EQU:returncomp>=0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["if(isNull())return0;","finalintplaces=param2.getInt();","doublevalue=param1.getDouble();","longfactor=1;","if(places>0){","for(inti=0;i<places;i++){"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["if(readBoolean())return0;","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returnreadBoolean()?1:0;","caseSQLTokenizer.BINARY:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["if(raFile!=null)","try{","raFile.close();","}catch(Exceptione2){","DriverManager.println(e2.toString());","throwSmallSQLException.createFromException(e);"], "location": ["|project://smallsql/src/smallsql/database/IndexDescription.java|","|project://smallsql/src/smallsql/database/TableView.java|"]},
{ "lines":["caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.TIME:","caseSQLTokenizer.DATE:","caseSQLTokenizer.SMALLDATETIME:","offset+=4;","break;"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.BIGINT:","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.JAVA_OBJECT:","caseSQLTokenizer.LONGVARBINARY:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["formatNumber(details.hour,2,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","returnbuf.toString();"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["formatNumber(details.year,4,buf);","buf.append('');","formatHour12(details.hour,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["returnMoney.createFromUnscaledValue(getMoney());","caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:","returngetNumeric();","caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.SMALLDATETIME:","offset+=4;","break;","caseSQLTokenizer.BIGINT:","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returnresult;","listEnum.offsetStack[listEnum.stack]=offset+pointerSize;","offset=getPointer();","shift-=16;","listEnum.stack++;","listEnum.resultStack[listEnum.stack]=result;"], "location": ["|project://smallsql/src/smallsql/database/LongTreeList.java|","|project://smallsql/src/smallsql/database/LongTreeList.java|"]},
{ "lines":["caseSQLTokenizer.INT:","returngetIntImpl();","caseSQLTokenizer.BIGINT:","returngetLongImpl();","caseSQLTokenizer.REAL:","returngetFloatImpl();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["returnvalue;","publicfloatfloatValue(){","returnvalue;","publicintintValue(){","return(int)value;","publiclonglongValue(){"], "location": ["|project://smallsql/src/smallsql/database/MutableLong.java|","|project://smallsql/src/smallsql/database/MutableFloat.java|"]},
{ "lines":["caseSQLTokenizer.REAL:","caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.TIME:","caseSQLTokenizer.DATE:","caseSQLTokenizer.SMALLDATETIME:","offset+=4;"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseIN:","caseEQUALS_NULL:","caseEQUALS:returncomp==0;","caseGREATER:returncomp>0;","caseGRE_EQU:returncomp>=0;","caseLESSER:returncomp<0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["finalintplaces=param2.getInt();","doublevalue=param1.getDouble();","longfactor=1;","if(places>0){","for(inti=0;i<places;i++){","factor*=10;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["caseSQLTokenizer.INT:","returnreadInt();","caseSQLTokenizer.BIGINT:","returnreadLong();","caseSQLTokenizer.REAL:","returnreadFloat();"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["StringtableName=tables.get(t);","TableViewtab=getTableView(con,tableName);","if(!(tabinstanceofTable))continue;","IndexDescriptionsindexes=((Table)tab).indexes;","for(inti=0;i<indexes.size();i++){","IndexDescriptionindex=indexes.get(i);"], "location": ["|project://smallsql/src/smallsql/database/Database.java|","|project://smallsql/src/smallsql/database/Database.java|","|project://smallsql/src/smallsql/database/Database.java|"]},
{ "lines":["if(places>0){","for(inti=0;i<places;i++){","factor*=10;","value*=factor;","}else{","for(inti=0;i>places;i--){"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append(':');","formatMillis(details.millis,buf);","returnbuf.toString();"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:","returnnewDateTime(getLong(),dataType);","caseSQLTokenizer.UNIQUEIDENTIFIER:","returngetBytes();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:","returnreadString();","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returnreadString();","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","returnreadLongString();"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returnInteger.parseInt(getString().trim());","finallonggetLong()throwsException{","if(isNull())return0;","returnLong.parseLong(getString().trim());","finalfloatgetFloat()throwsException{","if(isNull())return0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["returnLong.parseLong(getString().trim());","finalfloatgetFloat()throwsException{","if(isNull())return0;","returnFloat.parseFloat(getString().trim());","finaldoublegetDouble()throwsException{","if(isNull())return0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:","returnreadString();","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["intdataType=getDataType();","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?1:0;","caseSQLTokenizer.TINYINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseOR:","caseAND:","caseNOT:","caseLIKE:","caseISNULL:","caseISNOTNULL:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["booleanisNull()throwsException{","returnparam1.isNull()||param2.isNull();","finaldoublegetDouble()throwsException{","if(isNull())return0;","finalintplaces=param2.getInt();","doublevalue=param1.getDouble();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["caseSQLTokenizer.DOUBLE:","returnnewDouble(getDouble());","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:","returnMoney.createFromUnscaledValue(getMoney());","caseSQLTokenizer.NUMERIC:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["finalbooleanisNull()throwsException{","returnparam1.isNull();","finalbyte[]getBytes()throwsException{","if(isNull())returnnull;","returngetString().getBytes();","finalStringgetString()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionLCase.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionUCase.java|"]},
{ "lines":["if(page==null)","returnnull;","if(i+1==count)","returnpage.getValue();","else","page=(IndexNode)page.getValue();"], "location": ["|project://smallsql/src/smallsql/database/Index.java|","|project://smallsql/src/smallsql/database/Index.java|"]},
{ "lines":["formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.year,4,buf);","buf.append('');","formatHour12(details.hour,buf);","buf.append(':');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returnnewInteger(getInt());","caseSQLTokenizer.BIGINT:","returnnewLong(getLong());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["formatNumber(details.day,2,buf);","buf.append('');","buf.append(SHORT_MONTHS[details.month]);","buf.append('');","formatNumber(details.year,4,buf);","buf.append('');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["returnnewInteger(getInt());","caseSQLTokenizer.BIGINT:","returnnewLong(getLong());","caseSQLTokenizer.REAL:","returnnewFloat(getFloat());","caseSQLTokenizer.FLOAT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["returnnewFloat(getFloat());","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","returnnewDouble(getDouble());","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["finallonggetLong()throwsException{","if(isNull())return0;","returnLong.parseLong(getString().trim());","finalfloatgetFloat()throwsException{","if(isNull())return0;","returnFloat.parseFloat(getString().trim());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["for(inti=0;i<places;i++){","factor*=10;","value*=factor;","}else{","for(inti=0;i>places;i--){","factor*=10;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["caseSQLTokenizer.BIGINT:","returnnewLong(getLong());","caseSQLTokenizer.REAL:","returnnewFloat(getFloat());","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.DATE:","caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:"], "location": ["|project://smallsql/src/smallsql/database/Index.java|","|project://smallsql/src/smallsql/database/Index.java|"]},
{ "lines":["caseSQLTokenizer.DATE:","caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:","returnnewDateTime(getLong(),dataType);","caseSQLTokenizer.UNIQUEIDENTIFIER:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["result|=(((long)nextEntry)<<shift);","if(listEnum.stack>=3){","listEnum.offsetStack[listEnum.stack]=offset;","returnresult;","listEnum.offsetStack[listEnum.stack]=offset+pointerSize;","offset=getPointer();"], "location": ["|project://smallsql/src/smallsql/database/LongTreeList.java|","|project://smallsql/src/smallsql/database/LongTreeList.java|"]},
{ "lines":["break;","caseSQLTokenizer.INT:","caseSQLTokenizer.REAL:","caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.TIME:","caseSQLTokenizer.DATE:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["finalvoidsetRowPosition(longrowPosition)throwsException{","rowSource.setRowPosition(rowPosition);","finalvoidnullRow(){","rowSource.nullRow();","row=0;","finalvoidnoRow(){"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["returnnewLong(getLong());","caseSQLTokenizer.REAL:","returnnewFloat(getFloat());","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","returnnewDouble(getDouble());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["buf.append('');","formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.year,4,buf);","buf.append('');","formatHour12(details.hour,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.INT:","returnnewInteger(getInt());","caseSQLTokenizer.BIGINT:","returnnewLong(getLong());","caseSQLTokenizer.REAL:","returnnewFloat(getFloat());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["raFile=Utils.openRaFile(file,database.isReadOnly());","ByteBufferbuffer=ByteBuffer.allocate(8);","raFile.read(buffer);","buffer.position(0);","intmagic=buffer.getInt();","intversion=buffer.getInt();"], "location": ["|project://smallsql/src/smallsql/database/IndexDescription.java|","|project://smallsql/src/smallsql/database/TableView.java|"]},
{ "lines":["caseSQLTokenizer.SMALLINT:","returnreadShort();","caseSQLTokenizer.INT:","returnreadInt();","caseSQLTokenizer.BIGINT:","returnreadLong();"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["byte[]b=newbyte[length];","System.arraycopy(bytes,0,b,0,length);","returnb;","finalStringgetString()throwsException{","if(isNull())returnnull;","Stringstr=param1.getString();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionLeft.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionRTrim.java|"]},
{ "lines":["switch(dataType){","caseSQLTokenizer.BIT:","return(obj.equals(Boolean.TRUE))?1:0;","caseSQLTokenizer.INT:","caseSQLTokenizer.BIGINT:","caseSQLTokenizer.DOUBLE:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["dataType=expr.getDataType();","else","initValue(expr);","}elseif(!expr.isNull()){","switch(dataType){","caseSQLTokenizer.TINYINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["level++;","nodeStack.push(","newIndexNodeScrollStatus((IndexNode)status.nodeValue,","(expressions.get(level).getAlias()!=SQLTokenizer.DESC_STR),","scroll,level));","continue;"], "location": ["|project://smallsql/src/smallsql/database/IndexScrollStatus.java|","|project://smallsql/src/smallsql/database/IndexScrollStatus.java|"]},
{ "lines":["buf.append('-');","formatNumber(details.month+1,2,buf);","buf.append('-');","formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.hour,2,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["factor*=10;","value*=factor;","}else{","for(inti=0;i>places;i--){","factor*=10;","value/=factor;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["if(idx==-1){","if(status.nodeValue!=null){","if(status.nodeValueinstanceofIndexNode){","level++;","nodeStack.push(","newIndexNodeScrollStatus((IndexNode)status.nodeValue,"], "location": ["|project://smallsql/src/smallsql/database/IndexScrollStatus.java|","|project://smallsql/src/smallsql/database/IndexScrollStatus.java|"]},
{ "lines":["switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","return(obj==Boolean.TRUE)?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["returnreadTime();","caseSQLTokenizer.DATE:","returnreadDate();","caseSQLTokenizer.SMALLDATETIME:","returnreadSmallDateTime();","default:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returngetBoolean()?Boolean.TRUE:Boolean.FALSE;","caseSQLTokenizer.BINARY:","caseSQLTokenizer.VARBINARY:","returngetBytes();","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.SMALLMONEY:","returnMoney.createFromUnscaledValue(getMoney());","caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:","returngetNumeric();","caseSQLTokenizer.CHAR:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.REAL:","returnnewFloat(getFloat());","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","returnnewDouble(getDouble());","caseSQLTokenizer.MONEY:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["formatNumber(details.month+1,2,buf);","buf.append('-');","formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.hour,2,buf);","buf.append(':');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["if(isNull())return0;","returnMoney.parseMoney(getString().trim());","finalMutableNumericgetNumeric()throwsException{","if(isNull())returnnull;","returnnewMutableNumeric(getString().trim());","finalObjectgetObject()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["returngetBytes();","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returnnewInteger(getInt());","caseSQLTokenizer.BIGINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["publicintintValue(){","return(int)value;","publiclonglongValue(){","return(long)value;","publicStringtoString(){","returnString.valueOf(value);"], "location": ["|project://smallsql/src/smallsql/database/MutableDouble.java|","|project://smallsql/src/smallsql/database/MutableFloat.java|"]},
{ "lines":["caseSQLTokenizer.BOOLEAN:","return(obj==Boolean.TRUE)?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","caseSQLTokenizer.BIGINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["if(isNull())return0;","returnDouble.parseDouble(getString().trim());","finallonggetMoney()throwsException{","if(isNull())return0;","returnMoney.parseMoney(getString().trim());","finalMutableNumericgetNumeric()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["caseEQUALS:returncomp==0;","caseGREATER:returncomp>0;","caseGRE_EQU:returncomp>=0;","caseLESSER:returncomp<0;","caseLES_EQU:returncomp<=0;","caseUNEQUALS:returncomp!=0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["if(obj==null)return0;","switch(dataType){","caseSQLTokenizer.BIT:","return(obj.equals(Boolean.TRUE))?1:0;","caseSQLTokenizer.INT:","caseSQLTokenizer.BIGINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["returnrowSource.getRowPosition();","finalvoidsetRowPosition(longrowPosition)throwsException{","rowSource.setRowPosition(rowPosition);","finalvoidnullRow(){","rowSource.nullRow();","row=0;"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["finalvoidnoRow(){","rowSource.noRow();","row=0;","finalbooleanrowInserted(){","returnrowSource.rowInserted();","finalbooleanrowDeleted(){"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["finaldoublegetDouble()throwsException{","if(isNull())return0;","finalintplaces=param2.getInt();","doublevalue=param1.getDouble();","longfactor=1;","if(places>0){"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["caseSQLTokenizer.INT:","caseSQLTokenizer.REAL:","caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.TIME:","caseSQLTokenizer.DATE:","caseSQLTokenizer.SMALLDATETIME:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.TIMESTAMP:","returnreadTimestamp();","caseSQLTokenizer.TIME:","returnreadTime();","caseSQLTokenizer.DATE:","returnreadDate();"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["finallonggetMoney()throwsException{","if(isNull())return0;","returnMoney.parseMoney(getString().trim());","finalMutableNumericgetNumeric()throwsException{","if(isNull())returnnull;","returnnewMutableNumeric(getString().trim());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["rowSource.noRow();","row=0;","finalbooleanrowInserted(){","returnrowSource.rowInserted();","finalbooleanrowDeleted(){","returnrowSource.rowDeleted();"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["caseSQLTokenizer.TIME:","returnreadTime();","caseSQLTokenizer.DATE:","returnreadDate();","caseSQLTokenizer.SMALLDATETIME:","returnreadSmallDateTime();"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.BLOB:","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","caseSQLTokenizer.TIMESTAMP:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["formatNumber(details.hour,2,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append('.');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","caseSQLTokenizer.TINYINT:","offset++;","break;","caseSQLTokenizer.SMALLINT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["buf.append('');","formatNumber(details.hour,2,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["buf.append('');","formatHour12(details.hour,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["finalbooleanisNull()throwsException{","returnparam1.isNull()||param2.isNull();","finalbyte[]getBytes()throwsException{","if(isNull())returnnull;","byte[]bytes=param1.getBytes();","intlength=param2.getInt();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRight.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionLeft.java|"]},
{ "lines":["if(obj==null)return0;","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","return(obj==Boolean.TRUE)?1:0;","caseSQLTokenizer.TINYINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["returnnull;","if(i+1==count)","returnpage.getValue();","else","page=(IndexNode)page.getValue();","thrownewError();"], "location": ["|project://smallsql/src/smallsql/database/Index.java|","|project://smallsql/src/smallsql/database/Index.java|"]},
{ "lines":["caseSQLTokenizer.DECIMAL:","returngetNumeric();","caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["listEnum.offsetStack[listEnum.stack]=offset;","returnresult;","listEnum.offsetStack[listEnum.stack]=offset+pointerSize;","offset=getPointer();","shift-=16;","listEnum.stack++;"], "location": ["|project://smallsql/src/smallsql/database/LongTreeList.java|","|project://smallsql/src/smallsql/database/LongTreeList.java|"]},
{ "lines":["caseSQLTokenizer.NVARCHAR:","returnreadString();","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returngetNumeric();","caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:","caseSQLTokenizer.LONGNVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.DECIMAL:","returnreadNumeric();","caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["if(isNull())return0;","returnInteger.parseInt(getString().trim());","finallonggetLong()throwsException{","if(isNull())return0;","returnLong.parseLong(getString().trim());","finalfloatgetFloat()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["caseSQLTokenizer.BOOLEAN:","returngetBoolean()?Boolean.TRUE:Boolean.FALSE;","caseSQLTokenizer.BINARY:","caseSQLTokenizer.VARBINARY:","returngetBytes();","caseSQLTokenizer.TINYINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["nodeStack.push(","newIndexNodeScrollStatus((IndexNode)status.nodeValue,","(expressions.get(level).getAlias()!=SQLTokenizer.DESC_STR),","scroll,level));","continue;","}else"], "location": ["|project://smallsql/src/smallsql/database/IndexScrollStatus.java|","|project://smallsql/src/smallsql/database/IndexScrollStatus.java|"]},
{ "lines":["rowSource.nullRow();","row=0;","finalvoidnoRow(){","rowSource.noRow();","row=0;","finalbooleanrowInserted(){"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["returngetFloatImpl();","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.NUMERIC:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["Listrows=newArrayList();","Stringstables=getTables(table);","for(intt=0;t<tables.size();t++){","StringtableName=tables.get(t);","TableViewtab=getTableView(con,tableName);","if(!(tabinstanceofTable))continue;"], "location": ["|project://smallsql/src/smallsql/database/Database.java|","|project://smallsql/src/smallsql/database/Database.java|"]},
{ "lines":["switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?Boolean.TRUE:Boolean.FALSE;","caseSQLTokenizer.BINARY:","caseSQLTokenizer.VARBINARY:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["returnUtils.string2boolean(getString().trim());","finalintgetInt()throwsException{","if(isNull())return0;","returnInteger.parseInt(getString().trim());","finallonggetLong()throwsException{","if(isNull())return0;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["caseSQLTokenizer.CHAR:","caseSQLTokenizer.NCHAR:","caseSQLTokenizer.VARCHAR:","caseSQLTokenizer.NVARCHAR:","returnreadString();","caseSQLTokenizer.CLOB:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.LONGVARBINARY:","returngetBytes();","caseSQLTokenizer.DATE:","caseSQLTokenizer.TIME:","caseSQLTokenizer.TIMESTAMP:","caseSQLTokenizer.SMALLDATETIME:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returnreadBoolean()?1:0;","caseSQLTokenizer.BINARY:","caseSQLTokenizer.VARBINARY:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","returnnewDouble(getDouble());","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:","returnMoney.createFromUnscaledValue(getMoney());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["finalbyte[]getBytes()throwsException{","if(isNull())returnnull;","byte[]bytes=param1.getBytes();","intlength=param2.getInt();","if(bytes.length<=length)returnbytes;","byte[]b=newbyte[length];"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRight.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionLeft.java|"]},
{ "lines":["finalintgetInt()throwsException{","if(isNull())return0;","returnInteger.parseInt(getString().trim());","finallonggetLong()throwsException{","if(isNull())return0;","returnLong.parseLong(getString().trim());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["intdataType=getDataType();","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?Boolean.TRUE:Boolean.FALSE;","caseSQLTokenizer.BINARY:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["if(isNull())returnfalse;","returnUtils.string2boolean(getString().trim());","finalintgetInt()throwsException{","if(isNull())return0;","returnInteger.parseInt(getString().trim());","finallonggetLong()throwsException{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","caseSQLTokenizer.TIMESTAMP:","offset+=8;","break;"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["if(expr.isNull())","dataType=expr.getDataType();","else","initValue(expr);","}elseif(!expr.isNull()){","switch(dataType){"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["result=left.next();","if(result){","result=right.first();","if(!result){","switch(type){","caseJoin.LEFT_JOIN:"], "location": ["|project://smallsql/src/smallsql/database/JoinScroll.java|","|project://smallsql/src/smallsql/database/JoinScroll.java|"]},
{ "lines":["formatNumber(details.hour,2,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append(':');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["formatHour12(details.hour,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append(':');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.TINYINT:","returnreadUnsignedByte();","caseSQLTokenizer.SMALLINT:","returnreadShort();","caseSQLTokenizer.INT:","returnreadInt();"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["if(value==null){","if(expr.isNull())","dataType=expr.getDataType();","else","initValue(expr);","}elseif(!expr.isNull()){"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.hour,2,buf);","buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["initValue(expr);","}elseif(!expr.isNull()){","switch(dataType){","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["if(status.nodeValue!=null){","if(status.nodeValueinstanceofIndexNode){","level++;","nodeStack.push(","newIndexNodeScrollStatus((IndexNode)status.nodeValue,","(expressions.get(level).getAlias()!=SQLTokenizer.DESC_STR),"], "location": ["|project://smallsql/src/smallsql/database/IndexScrollStatus.java|","|project://smallsql/src/smallsql/database/IndexScrollStatus.java|"]},
{ "lines":["Stringstables=getTables(table);","for(intt=0;t<tables.size();t++){","StringtableName=tables.get(t);","TableViewtab=getTableView(con,tableName);","if(!(tabinstanceofTable))continue;","IndexDescriptionsindexes=((Table)tab).indexes;"], "location": ["|project://smallsql/src/smallsql/database/Database.java|","|project://smallsql/src/smallsql/database/Database.java|"]},
{ "lines":["caseSQLTokenizer.REAL:","returngetFloatImpl();","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["finalfloatgetFloat()throwsException{","if(isNull())return0;","returnFloat.parseFloat(getString().trim());","finaldoublegetDouble()throwsException{","if(isNull())return0;","returnDouble.parseDouble(getString().trim());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["caseSQLTokenizer.BIGINT:","returngetLongImpl();","caseSQLTokenizer.REAL:","returngetFloatImpl();","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.JAVA_OBJECT:","caseSQLTokenizer.LONGVARBINARY:","caseSQLTokenizer.BLOB:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.NCLOB:","caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","returnreadLongString();","caseSQLTokenizer.JAVA_OBJECT:","ByteArrayInputStreambais=newByteArrayInputStream(readLongBinary());"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.BIGINT:","returnreadLong();","caseSQLTokenizer.REAL:","returnreadFloat();","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["if(listEnum.stack>=3){","listEnum.offsetStack[listEnum.stack]=offset;","returnresult;","listEnum.offsetStack[listEnum.stack]=offset+pointerSize;","offset=getPointer();","shift-=16;"], "location": ["|project://smallsql/src/smallsql/database/LongTreeList.java|","|project://smallsql/src/smallsql/database/LongTreeList.java|"]},
{ "lines":["caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?Boolean.TRUE:Boolean.FALSE;","caseSQLTokenizer.BINARY:","caseSQLTokenizer.VARBINARY:","returngetBytes();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["offset+=4;","break;","caseSQLTokenizer.BIGINT:","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append('.');","formatMillis(details.millis,buf);","returnbuf.toString();"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["returngetLongImpl();","caseSQLTokenizer.REAL:","returngetFloatImpl();","caseSQLTokenizer.FLOAT:","caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["doublevalue=param1.getDouble();","longfactor=1;","if(places>0){","for(inti=0;i<places;i++){","factor*=10;","value*=factor;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["offset+=2;","break;","caseSQLTokenizer.INT:","caseSQLTokenizer.REAL:","caseSQLTokenizer.SMALLMONEY:","caseSQLTokenizer.TIME:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["returnDouble.parseDouble(getString().trim());","finallonggetMoney()throwsException{","if(isNull())return0;","returnMoney.parseMoney(getString().trim());","finalMutableNumericgetNumeric()throwsException{","if(isNull())returnnull;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["returngetBoolean()?1:0;","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returngetIntImpl();","caseSQLTokenizer.BIGINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["buf.append(':');","formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append('.');","formatMillis(details.millis,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["else","initValue(expr);","}elseif(!expr.isNull()){","switch(dataType){","caseSQLTokenizer.TINYINT:","caseSQLTokenizer.SMALLINT:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionValue.java|","|project://smallsql/src/smallsql/database/ExpressionValue.java|"]},
{ "lines":["caseSQLTokenizer.LONGNVARCHAR:","caseSQLTokenizer.LONGVARCHAR:","returnreadLongString();","caseSQLTokenizer.JAVA_OBJECT:","ByteArrayInputStreambais=newByteArrayInputStream(readLongBinary());","ObjectInputStreamois=newObjectInputStream(bais);"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["caseSQLTokenizer.SMALLINT:","caseSQLTokenizer.INT:","returnnewInteger(getInt());","caseSQLTokenizer.BIGINT:","returnnewLong(getLong());","caseSQLTokenizer.REAL:"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["buf.append(SHORT_MONTHS[details.month]);","buf.append('');","formatNumber(details.day,2,buf);","buf.append('');","formatNumber(details.year,4,buf);","buf.append('');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["longfactor=1;","if(places>0){","for(inti=0;i<places;i++){","factor*=10;","value*=factor;","}else{"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionRound.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionTruncate.java|"]},
{ "lines":["caseSQLTokenizer.DOUBLE:","caseSQLTokenizer.MONEY:","caseSQLTokenizer.JAVA_OBJECT:","caseSQLTokenizer.LONGVARBINARY:","caseSQLTokenizer.BLOB:","caseSQLTokenizer.CLOB:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["buf.append('');","formatNumber(details.year,4,buf);","buf.append('');","formatHour12(details.hour,buf);","buf.append(':');","formatNumber(details.minute,2,buf);"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["row=0;","finalvoidnoRow(){","rowSource.noRow();","row=0;","finalbooleanrowInserted(){","returnrowSource.rowInserted();"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["if(isNull())returnnull;","intdataType=getDataType();","switch(dataType){","caseSQLTokenizer.BIT:","caseSQLTokenizer.BOOLEAN:","returngetBoolean()?Boolean.TRUE:Boolean.FALSE;"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["newIndexNodeScrollStatus((IndexNode)status.nodeValue,","(expressions.get(level).getAlias()!=SQLTokenizer.DESC_STR),","scroll,level));","continue;","}else","returngetReturnValue(status.nodeValue);"], "location": ["|project://smallsql/src/smallsql/database/IndexScrollStatus.java|","|project://smallsql/src/smallsql/database/IndexScrollStatus.java|"]},
{ "lines":["finaldoublegetDouble()throwsException{","if(isNull())return0;","returnDouble.parseDouble(getString().trim());","finallonggetMoney()throwsException{","if(isNull())return0;","returnMoney.parseMoney(getString().trim());"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnString.java|","|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java|"]},
{ "lines":["while(values.hasNext()){","TableStorePagelock=(TableStorePage)values.next();","if(lock.con!=con)returnnull;","tabLockConnection=con;","tabLockCount++;","TableStorePagelock=newTableStorePage(con,this,LOCK_TAB,page);"], "location": ["|project://smallsql/src/smallsql/database/Table.java|","|project://smallsql/src/smallsql/database/Table.java|"]},
{ "lines":["formatNumber(details.minute,2,buf);","buf.append(':');","formatNumber(details.second,2,buf);","buf.append(':');","formatMillis(details.millis,buf);","buf.append(details.hour<12?'AM':'PM');"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["this.value=value;","publicdoubledoubleValue(){","returnvalue;","publicfloatfloatValue(){","returnvalue;","publicintintValue(){"], "location": ["|project://smallsql/src/smallsql/database/MutableLong.java|","|project://smallsql/src/smallsql/database/MutableFloat.java|","|project://smallsql/src/smallsql/database/MutableInteger.java|"]},
{ "lines":["finallonggetRowPosition(){","returnrowSource.getRowPosition();","finalvoidsetRowPosition(longrowPosition)throwsException{","rowSource.setRowPosition(rowPosition);","finalvoidnullRow(){","rowSource.nullRow();"], "location": ["|project://smallsql/src/smallsql/database/Where.java|","|project://smallsql/src/smallsql/database/Distinct.java|"]},
{ "lines":["caseSQLTokenizer.DATE:","caseSQLTokenizer.SMALLDATETIME:","offset+=4;","break;","caseSQLTokenizer.BIGINT:","caseSQLTokenizer.FLOAT:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]},
{ "lines":["buf.append(':');","formatNumber(details.second,2,buf);","buf.append(':');","formatMillis(details.millis,buf);","buf.append(details.hour<12?'AM':'PM');","returnbuf.toString();"], "location": ["|project://smallsql/src/smallsql/database/DateTime.java|","|project://smallsql/src/smallsql/database/DateTime.java|"]},
{ "lines":["caseSQLTokenizer.MONEY:","caseSQLTokenizer.SMALLMONEY:","returnMoney.createFromUnscaledValue(getMoney());","caseSQLTokenizer.NUMERIC:","caseSQLTokenizer.DECIMAL:","returngetNumeric();"], "location": ["|project://smallsql/src/smallsql/database/ExpressionFunctionReturnP1.java|","|project://smallsql/src/smallsql/database/ExpressionArithmetic.java|"]},
{ "lines":["caseSQLTokenizer.MONEY:","caseSQLTokenizer.JAVA_OBJECT:","caseSQLTokenizer.LONGVARBINARY:","caseSQLTokenizer.BLOB:","caseSQLTokenizer.CLOB:","caseSQLTokenizer.NCLOB:"], "location": ["|project://smallsql/src/smallsql/database/StoreImpl.java|","|project://smallsql/src/smallsql/database/StoreImpl.java|"]}
]}